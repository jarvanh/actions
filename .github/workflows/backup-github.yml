name: backup-github

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: rclone-install
        run: |
          # ÂÆâË£Ö rclone
          curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip
          unzip rclone-current-linux-amd64.zip
          cd rclone-*-linux-amd64
          sudo mv rclone /usr/bin
          sudo chmod +x /usr/bin/rclone
      - name: rclone-config
        env:
          RCLONE_CONFIG: ${{ secrets.RCLONE }}
        run: |
          # ÂÜôÈÖçÁΩÆÊñá‰ª∂
          mkdir -p ~/.config/rclone/
          cat << EOF > ~/.config/rclone/rclone.conf
          $RCLONE_CONFIG
          EOF
      - name: rclone-run
        run: |
          # Rclone-Run
          # Êõ¥ÊîπÊó∂Âå∫
          sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

          sudo mkdir /onedrive
          sudo nohup rclone mount onedrive: /onedrive --allow-non-empty --no-gzip-encoding --umask 000 --allow-other --attr-timeout 10m --vfs-cache-mode full --vfs-cache-max-age 5m --vfs-read-chunk-size-limit 10G --buffer-size 100M --vfs-cache-max-size 50G &
          sleep 3m
          cd /onedrive/backup/github
          pwd
          ls
          du -sh .
          
          # echo "==========ÂºÄÂßãÂêåÊ≠•==========="
          # # Ê†πÊçÆ[rcloneÁöÑÊñáÊ°£]ÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥Âú®ÂêåÊ≠•ÁöÑÊó∂ÂÄô‰øùÁïôÁõÆÊ†áÁõÆÂΩï‰∏ãÁöÑÊñá‰ª∂Â§πÔºå‰Ω†ÂèØ‰ª•‰ΩøÁî®--backup-dirÈÄâÈ°πÔºåÊåáÂÆö‰∏Ä‰∏™Â§á‰ªΩÁõÆÂΩïÔºåÊääË¶ÅÂà†Èô§ÁöÑÊñá‰ª∂ÁßªÂä®Âà∞ÈÇ£Èáå„ÄÇ‰æãÂ¶ÇÔºå‰Ω†ÂèØ‰ª•ËøôÊ†∑ÊâßË°åÔºö
          # # rclone sync --ignore-errors . i:backup/github -vv --backup-dir i:backup/github-old
          # # ËøôÊ†∑Ôºå‰Ω†Â∞±ÂèØ‰ª•Âú®i:backup/githubÁõÆÂΩï‰∏ã‰øùÁïôÂéüÊù•ÁöÑÊñá‰ª∂Â§πÔºåËÄåÊääË¶ÅÂà†Èô§ÁöÑÊñá‰ª∂ÁßªÂä®Âà∞i:backup/github-oldÁõÆÂΩï‰∏ã„ÄÇÂ∏åÊúõËøôËÉΩÂ∏ÆÂà∞‰Ω†„ÄÇüëç
          # rclone sync --ignore-errors . i:backup/github -vv --backup-dir i:backup/github-old
          # rclone size --ignore-errors i:backup/github -vv
          # echo "==========ÁªìÊùüÂêåÊ≠•==========="

      # - name: Create backup directory
      #   run: |
      #     mkdir backup
      #     cd backup

      - name: List repositories
        run: |
          TOKEN="${{ secrets.PAT }}"
          curl -s -H "Authorization: token $TOKEN" "https://api.github.com/user/repos?type=all&per_page=100" | grep -e 'clone_url*' | cut -d \" -f 4 > repositories.txt
          sed -i "s|https://|https://$TOKEN@|g" repositories.txt

      - name: Clone repositories
        run: |
          while IFS= read -r repo; do
            echo "Cloning $repo..."
            git clone "$repo" || echo "git clone $repo Â§±Ë¥•"
          done < repositories.txt

      - name: Pull repositories
        run: |
          while IFS= read -r repo; do
            dir=$(basename "$repo" .git)
            if [ -d "$dir" ]; then
              echo "Pulling $repo..."
              cd "$dir" || continue
              git pull origin main || echo "git pull $repo Â§±Ë¥•"
              cd ..
            else
              echo "ÁõÆÂΩï $dir ‰∏çÂ≠òÂú®ÔºåË∑≥Ëøá"
            fi
          done < repositories.txt

      - name: check backup
        run: |
          pwd
          ls
          du -sh .

      - name: send notification
        run: |
          curl -s -X POST https://api.telegram.org/bot'${{ secrets.TELEGRAM_BOT_TOKEN }}'/sendMessage -d chat_id='${{ secrets.TELEGRAM_CHAT_ID }}' -d text="github backup-github ‰ªªÂä°ÊâßË°åÁªìÊùü"
