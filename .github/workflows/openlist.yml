name: openlist

on:
  schedule:
    # - cron: "0 1,7,13,19 * * *"
    - cron: "*/5 * * * *"
  workflow_dispatch:
  # workflow_run:
  #   workflows:
  #     - t
  #   types:
  #     - completed  # 工作流完成后触发
  watch:
    # types: started

jobs:
  build:
    concurrency: openlist-singleton
    runs-on: ubuntu-latest
    # timeout-minutes: 60
    steps:
    #   - name: Check Workflow Status
    #     run: |
    #       # 获取当前工作流的运行ID
    #       CURRENT_RUN_ID=${{ github.run_id }}
    
    #       workflow_runs=$(curl -s -X GET \
    #         -H "Accept: application/vnd.github.v3+json" \
    #         -H "Authorization: Bearer ${{ secrets.PAT }}" \
    #         "https://api.github.com/repos/${{ github.repository }}/actions/runs")
    
    #       # 排除当前运行ID后检查是否有其他运行中的工作流
    #       otherRunning=$(echo "$workflow_runs" | jq --arg current_id "$CURRENT_RUN_ID" \
    #         '.workflow_runs[] | select(.name == "openlist" and .status == "in_progress" and .id != ($current_id | tonumber))')
    
    #       if [[ -n $otherRunning ]]; then
    #         echo "Another workflow is already running. Aborting current workflow."
    #         exit 31
    #       else
    #         echo "No other running workflows found. Continuing."
    #       fi
      - name: rclone-install
        run: |
          # 安装 rclone
          # curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip
          curl -O https://beta.rclone.org/rclone-beta-latest-linux-amd64.zip
          unzip rclone-*-amd64.zip
          cd rclone-*-linux-amd64
          sudo mv rclone /usr/bin
          sudo chmod +x /usr/bin/rclone
          # sudo apt-get install rclone
      - name: rclone-config
        env:
          RCLONE_CONFIG: ${{ secrets.RCLONE }}
        run: |
          # 写配置文件
          mkdir -p ~/.config/rclone/
          cat << EOF > ~/.config/rclone/rclone.conf
          $RCLONE_CONFIG
          EOF
      - name: rclone-run
        run: |
          echo "==========onedrive==========="
          rclone lsf onedrive:
          echo "==========dropbox==========="
          rclone lsf dropbox:

          sudo apt-get install fuse3
          sudo mkdir -p /dropbox
          sudo nohup rclone mount dropbox: /dropbox --allow-non-empty --no-gzip-encoding --umask 000 --allow-other --attr-timeout 10m --vfs-cache-mode full --vfs-cache-max-age 5m --vfs-read-chunk-size-limit 10G --buffer-size 100M --vfs-cache-max-size 10G &
      - name: Run openlist container
        run: docker run -d --restart=unless-stopped -v /dropbox/self-hosted/openlist/data:/opt/openlist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name="openlist" openlistteam/openlist:latest
      - name: sleep
        run: |
          sudo sleep 1m    
      - name: Verify docker container is running
        run: docker ps
      - name: Split large videos
        run: |
          # 安装必要工具
          sudo apt-get update
          sudo apt-get install -y ffmpeg python3-pip
          pip3 install tqdm

          # 创建临时工作目录
          WORK_DIR="/tmp/video_processing"
          mkdir -p "$WORK_DIR"
          cd "$WORK_DIR"

          # 获取onedrive:1中大于4GB的视频文件列表
          echo "正在扫描大于4GB的视频文件..."
          rclone lsf onedrive:1 --files-only --format "sp" | awk '$1 > 4294967296 {print $2}' > large_videos.txt

          # 处理每个大视频文件
          while IFS= read -r video; do
            echo "处理视频: $video"
            
            # 只复制超过4GB的视频到本地
            rclone copy "onedrive:1/$video" .
            
            # 获取视频信息
            DURATION=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$video")
            FILESIZE=$(stat -c%s "$video")
            
            # 计算需要分割的片段数量
            SEGMENTS=$(( (FILESIZE + 4294967295) / 4294967296 ))  # 向上取整
            
            # 计算每个片段的时长（秒）
            SEGMENT_DURATION=$(echo "scale=2; $DURATION / $SEGMENTS" | bc)
            
            # 使用ffmpeg无损切割视频
            echo "切割视频为 $SEGMENTS 个片段..."
            ffmpeg -i "$video" -c copy -map 0 -segment_time "$SEGMENT_DURATION" -f segment -reset_timestamps 1 "${video%.*}_part%03d.${video##*.}"
            
            # 上传切割后的片段
            for part in "${video%.*}"_part*."${video##*.}"; do
              echo "上传片段: $part"
              rclone copyto "$part" "onedrive:1/$part"
              rm "$part"
            done
            
            # 删除本地原始文件
            rm "$video"
            
            # 删除云端原始文件
            rclone delete "onedrive:1/$video"
            
          done < large_videos.txt
          
      - name: rclone-sync
        run: |
          echo "==========onedrive==========="
          rclone lsf onedrive:
          echo "==========dropbox==========="
          rclone lsf dropbox:
          echo "==========openlist==========="
          rclone lsf openlist:

          echo "==========  onedrive:  ==========="
          rclone ls onedrive: \
              --exclude "1/**" \
              --exclude "2/**" \
              --exclude "3/**" \
              --exclude "4/**" \
              --exclude "5/**" \
              --min-size 4G --size-only --order-by size | awk '{printf "%s\t%s\n", $1, $2}' | numfmt --to=iec --field=1 --padding=8
          echo "==========  onedrive:0  ==========="
          rclone ls onedrive:0 --min-size 4G --size-only --order-by size | awk '{printf "%s\t%s\n", $1, $2}' | numfmt --to=iec --field=1 --padding=8
          echo "==========  onedrive:1  ==========="
          rclone ls onedrive:1 --min-size 4G --size-only --order-by size | awk '{printf "%s\t%s\n", $1, $2}' | numfmt --to=iec --field=1 --padding=8
          echo "==========  onedrive:2  ==========="
          rclone ls onedrive:2 --min-size 4G --size-only --order-by size | awk '{printf "%s\t%s\n", $1, $2}' | numfmt --to=iec --field=1 --padding=8
          echo "==========  onedrive:3  ==========="
          rclone ls onedrive:3 --min-size 4G --size-only --order-by size | awk '{printf "%s\t%s\n", $1, $2}' | numfmt --to=iec --field=1 --padding=8
          echo "==========  onedrive:4  ==========="
          rclone ls onedrive:4 --min-size 4G --size-only --order-by size | awk '{printf "%s\t%s\n", $1, $2}' | numfmt --to=iec --field=1 --padding=8
          echo "==========  onedrive:5  ==========="
          rclone ls onedrive:5 --min-size 4G --size-only --order-by size | awk '{printf "%s\t%s\n", $1, $2}' | numfmt --to=iec --field=1 --padding=8

          
          # # 统计 onedrive:0 的总大小
          # echo "==========  onedrive:0  ==========="
          # rclone size onedrive:0
          
          # # 统计 onedrive:1 的总大小
          # echo "==========  onedrive:1  ==========="
          # rclone size onedrive:1
          
          # # 统计 onedrive:2 的总大小
          # echo "==========  onedrive:2  ==========="
          # rclone size onedrive:2
          
          # # 统计 onedrive:3 的总大小
          # echo "==========  onedrive:3  ==========="
          # rclone size onedrive:3
          
          # # 统计 onedrive:4 的总大小
          # echo "==========  onedrive:4  ==========="
          # rclone size onedrive:4
          
          # # 统计 onedrive:5 的总大小
          # echo "==========  onedrive:5  ==========="
          # rclone size onedrive:5
          
          # # 统计根目录（排除子目录 1-5）的总大小
          # echo "==========  onedrive: (excluding 1-5) ==========="
          # rclone size onedrive: \
          #     --exclude "1/**" \
          #     --exclude "2/**" \
          #     --exclude "3/**" \
          #     --exclude "4/**" \
          #     --exclude "5/**"
          


          sudo rclone sync onedrive: openlist:baidupanCrypt/onedrive \
              --exclude "1/**" \
              --exclude "2/**" \
              --exclude "3/**" \
              --exclude "4/**" \
              --exclude "5/**" \
              --progress --fast-list --size-only --transfers 1 --checkers 32 
     
          sudo rclone sync onedrive:1 openlist:baidupanCrypt/1 --progress --fast-list --size-only --transfers 1 --checkers 32
          sudo rclone sync onedrive:2 openlist:aliyundriveCrypt/2 -vv --progress --fast-list --size-only --transfers 1 --checkers 32
          sudo rclone sync onedrive:3 openlist:aliyundriveCrypt/3 -vv --progress --fast-list --size-only --transfers 1 --checkers 32
          # sudo rclone sync onedrive:4 openlist:123pan2Crypt/4 --progress --fast-list --size-only --transfers 1 --checkers 32
          # sudo rclone sync onedrive:5 openlist:123pan2Crypt/5 --progress --fast-list --size-only --transfers 1 --checkers 32
        
      - name: Verify docker container is running
        run: docker ps
      - name: sleep
        run: |
          sudo sleep 10m
      - name: send notification
        run: |
          curl -s -X POST https://api.telegram.org/bot'${{ secrets.TELEGRAM_BOT_TOKEN }}'/sendMessage -d chat_id='${{ secrets.TELEGRAM_CHAT_ID }}' -d text="github openlist 任务执行完毕"
